MATCH (interactorA:GraphInteractor)<-[:interactors]-(interaction:GraphBinaryInteractionEvidence)-[:interactors]->(interactorB:GraphInteractor),
(interactorA)-[interactorTypeAR:interactorType]-(interactorTypeAN:GraphCvTerm{shortName:'protein'}),
(interactorB)-[interactorTypeBR:interactorType]-(interactorTypeBN:GraphCvTerm{shortName:'protein'}),
(interactorA)-[preferredIdentifierAR:preferredIdentifier]-(preferredIdentifierAN:GraphXref)-[preferredIdentifierADatabaseR:database]-(preferredIdentifierADatabaseN:GraphCvTerm),
(interactorB)-[preferredIdentifierBR:preferredIdentifier]-(preferredIdentifierBN:GraphXref)-[preferredIdentifierBDatabaseR:database]-(preferredIdentifierBDatabaseN:GraphCvTerm)
 WHERE  ID(interactorA)<ID(interactorB)
OPTIONAL MATCH (interaction)-[identifiersR:identifiers]-(identifiersN:GraphXref)-[sourceR:database]-(sourceN:GraphCvTerm) WHERE sourceN.shortName IN ['reactome','signor','intact']
OPTIONAL MATCH (interaction)-[interactiontypeR:interactionType]-(interactiontypeN:GraphCvTerm)
OPTIONAL MATCH (interaction)-[experimentR:experiment]-(experimentN:GraphExperiment)-[interactionDetectionMethodR:interactionDetectionMethod]-(interactionDetectionMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[hostOrganismR:hostOrganism]-(hostOrganismN:GraphOrganism)
OPTIONAL MATCH (experimentN)-[participantIdentificationMethodR:participantIdentificationMethod]-(participantIdentificationMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[publicationR:PUB_EXP]-(publicationN:GraphPublication)-[pubmedIdXrefR:pubmedId]-(pubmedIdXrefN:GraphXref)
OPTIONAL MATCH (interaction)-[clusteredInteractionR:interactions]-(clusteredInteractionN:GraphClusteredInteraction)
OPTIONAL MATCH (interaction)-[complexExpansionR:complexExpansion]-(complexExpansionN:GraphCvTerm)

RETURN
       ID(interaction) as graph_id,
       preferredIdentifierAN.identifier as interactorA_identifier,
       preferredIdentifierBN.identifier as interactorB_identifier,
       preferredIdentifierADatabaseN.shortName as interactorA_identifier_database,
       preferredIdentifierBDatabaseN.shortName as interactorB_identifier_database,
       preferredIdentifierADatabaseN.mIIdentifier as interactorA_identifier_database_mi,
       preferredIdentifierBDatabaseN.mIIdentifier as interactorB_identifier_database_mi,
       interactiontypeN.shortName as interaction_type_short_name,
       interactiontypeN.mIIdentifier as interaction_type_mi_identifier,
       interactionDetectionMethodN.shortName as interaction_detection_method_short_name,
       interactionDetectionMethodN.mIIdentifier as interaction_detection_method_mi_identifier,
       hostOrganismN.scientificName as host_organism_scientific_name,
       hostOrganismN.taxId as host_organism_tax_id,
       participantIdentificationMethodN.shortName as participant_detection_method_short_name,
       participantIdentificationMethodN.mIIdentifier as participant_detection_method_mi_identifier,
       clusteredInteractionN.miscore as mi_score,
       pubmedIdXrefN.identifier as pubmed_id,
       COLLECT(identifiersN.identifier) as interaction_identifier,
       CASE WHEN complexExpansionN.shortName IS NULL THEN "Not Needed" ELSE complexExpansionN.shortName END as expansion_method_short_name,
       CASE WHEN complexExpansionN.mIIdentifier IS NULL THEN "Not Needed" ELSE complexExpansionN.mIIdentifier END as expansion_method_mi_identifier,
       COLLECT (sourceN.shortName) as source_databases
       ORDER BY interactorA_identifier
-------------------------------------------------------------------------------------------------------------------------------------------------------------

Version 2

MATCH (interactorA:GraphInteractor)<-[:interactors]-(interaction:GraphBinaryInteractionEvidence)-[:interactors]->(interactorB:GraphInteractor)
WHERE  ID(interactorA)<ID(interactorB) AND EXISTS(interactorA.uniprotName) AND EXISTS(interactorB.uniprotName)
OPTIONAL MATCH (interaction)-[identifiersR:identifiers]-(identifiersN:GraphXref)-[sourceR:database]-(sourceN:GraphCvTerm) WHERE sourceN.shortName IN ['reactome','signor','intact']
OPTIONAL MATCH (interaction)-[interactiontypeR:interactionType]-(interactiontypeN:GraphCvTerm)
OPTIONAL MATCH (interaction)-[experimentR:experiment]-(experimentN:GraphExperiment)-[interactionDetectionMethodR:interactionDetectionMethod]-(interactionDetectionMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[hostOrganismR:hostOrganism]-(hostOrganismN:GraphOrganism)
OPTIONAL MATCH (experimentN)-[participantIdentificationMethodR:participantIdentificationMethod]-(participantIdentificationMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[publicationR:PUB_EXP]-(publicationN:GraphPublication)-[pubmedIdXrefR:pubmedId]-(pubmedIdXrefN:GraphXref)
OPTIONAL MATCH (interaction)-[clusteredInteractionR:interactions]-(clusteredInteractionN:GraphClusteredInteraction)
OPTIONAL MATCH (interaction)-[complexExpansionR:complexExpansion]-(complexExpansionN:GraphCvTerm)

RETURN
       distinct
       interactorA.uniprotName as interactorA_uniprot_name,
       interactorB.uniprotName as interactorB_uniprot_name,
       interactiontypeN.shortName as interaction_type_short_name,
       interactiontypeN.mIIdentifier as interaction_type_mi_identifier,
       interactionDetectionMethodN.shortName as interaction_detection_method_short_name,
       interactionDetectionMethodN.mIIdentifier as interaction_detection_method_mi_identifier,
       hostOrganismN.scientificName as host_organism_scientific_name,
       hostOrganismN.taxId as host_organism_tax_id,
       participantIdentificationMethodN.shortName as participant_detection_method_short_name,
       participantIdentificationMethodN.mIIdentifier as participant_detection_method_mi_identifier,
       clusteredInteractionN.miscore as mi_score,
       pubmedIdXrefN.identifier as pubmed_id,
       COLLECT(identifiersN.identifier) as interaction_identifier,
       CASE WHEN complexExpansionN.shortName IS NULL THEN "Not Needed" ELSE complexExpansionN.shortName END as expansion_method_short_name,
       CASE WHEN complexExpansionN.mIIdentifier IS NULL THEN "Not Needed" ELSE complexExpansionN.mIIdentifier END as expansion_method_mi_identifier,
       COLLECT (sourceN.shortName) as source_databases
       ORDER BY interactorA_uniprot_name

-----------------------------------------------------------------------------------------------------------------------------------------------------------
Self Interactions>>>>>>>>>>>>>

MATCH (interactorA:GraphProtein)<-[:interactorA]-(interaction:GraphBinaryInteractionEvidence) -[:interactorB]->(interactorB:GraphProtein)
WHERE  (ID(interactorA)=ID(interactorB)) AND EXISTS(interactorA.uniprotName) AND EXISTS(interactorB.uniprotName)
OPTIONAL MATCH (interaction)-[identifiersR:identifiers]-(identifiersN:GraphXref)-[sourceR:database]-(sourceN:GraphCvTerm) WHERE sourceN.shortName IN ['reactome','signor','intact']
OPTIONAL MATCH (interaction)-[interactiontypeR:interactionType]-(interactiontypeN:GraphCvTerm)
OPTIONAL MATCH (interaction)-[experimentR:experiment]-(experimentN:GraphExperiment)-[interactionDetectionMethodR:interactionDetectionMethod]-(interactionDetectionMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[hostOrganismR:hostOrganism]-(hostOrganismN:GraphOrganism)
OPTIONAL MATCH (experimentN)-[participantIdentificationMethodR:participantIdentificationMethod]-(participantIdentificationMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[publicationR:PUB_EXP]-(publicationN:GraphPublication)-[pubmedIdXrefR:pubmedId]-(pubmedIdXrefN:GraphXref)
OPTIONAL MATCH (interaction)-[clusteredInteractionR:interactions]-(clusteredInteractionN:GraphClusteredInteraction)
OPTIONAL MATCH (interaction)-[complexExpansionR:complexExpansion]-(complexExpansionN:GraphCvTerm)

RETURN
       distinct
       interactorA.uniprotName as interactorA_uniprot_name,
       interactorB.uniprotName as interactorB_uniprot_name,
       interactiontypeN.shortName as interaction_type_short_name,
       interactiontypeN.mIIdentifier as interaction_type_mi_identifier,
       interactionDetectionMethodN.shortName as interaction_detection_method_short_name,
       interactionDetectionMethodN.mIIdentifier as interaction_detection_method_mi_identifier,
       hostOrganismN.scientificName as host_organism_scientific_name,
       hostOrganismN.taxId as host_organism_tax_id,
       participantIdentificationMethodN.shortName as participant_detection_method_short_name,
       participantIdentificationMethodN.mIIdentifier as participant_detection_method_mi_identifier,
       clusteredInteractionN.miscore as mi_score,
       pubmedIdXrefN.identifier as pubmed_id,
       COLLECT(identifiersN.identifier) as interaction_identifier,
       CASE WHEN complexExpansionN.shortName IS NULL THEN "Not Needed" ELSE complexExpansionN.shortName END as expansion_method_short_name,
       CASE WHEN complexExpansionN.mIIdentifier IS NULL THEN "Not Needed" ELSE complexExpansionN.mIIdentifier END as expansion_method_mi_identifier,
       COLLECT (sourceN.shortName) as source_databases
       ORDER BY interactorA_uniprot_name

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Self Putative Case

MATCH (interactorA:GraphInteractor)-[:interactorA]-(interaction:GraphBinaryInteractionEvidence)
WHERE  (NOT (interaction)-[:interactorB]-(:GraphInteractor)) AND EXISTS(interactorA.uniprotName)
OPTIONAL MATCH (interaction)-[identifiersR:identifiers]-(identifiersN:GraphXref)-[sourceR:database]-(sourceN:GraphCvTerm) WHERE sourceN.shortName IN ['reactome','signor','intact']
OPTIONAL MATCH (interaction)-[interactiontypeR:interactionType]-(interactiontypeN:GraphCvTerm)
OPTIONAL MATCH (interaction)-[experimentR:experiment]-(experimentN:GraphExperiment)-[interactionDetectionMethodR:interactionDetectionMethod]-(interactionDetectionMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[hostOrganismR:hostOrganism]-(hostOrganismN:GraphOrganism)
OPTIONAL MATCH (experimentN)-[participantIdentificationMethodR:participantIdentificationMethod]-(participantIdentificationMethodN:GraphCvTerm)
OPTIONAL MATCH (experimentN)-[publicationR:PUB_EXP]-(publicationN:GraphPublication)-[pubmedIdXrefR:pubmedId]-(pubmedIdXrefN:GraphXref)
OPTIONAL MATCH (interaction)-[clusteredInteractionR:interactions]-(clusteredInteractionN:GraphClusteredInteraction)
OPTIONAL MATCH (interaction)-[complexExpansionR:complexExpansion]-(complexExpansionN:GraphCvTerm)

RETURN
       distinct
       interactorA.uniprotName as interactorA_uniprot_name,
       '' as interactorB_uniprot_name,
       interactiontypeN.shortName as interaction_type_short_name,
       interactiontypeN.mIIdentifier as interaction_type_mi_identifier,
       interactionDetectionMethodN.shortName as interaction_detection_method_short_name,
       interactionDetectionMethodN.mIIdentifier as interaction_detection_method_mi_identifier,
       hostOrganismN.scientificName as host_organism_scientific_name,
       hostOrganismN.taxId as host_organism_tax_id,
       participantIdentificationMethodN.shortName as participant_detection_method_short_name,
       participantIdentificationMethodN.mIIdentifier as participant_detection_method_mi_identifier,
       clusteredInteractionN.miscore as mi_score,
       pubmedIdXrefN.identifier as pubmed_id,
       COLLECT(identifiersN.identifier) as interaction_identifier,
       CASE WHEN complexExpansionN.shortName IS NULL THEN "Not Needed" ELSE complexExpansionN.shortName END as expansion_method_short_name,
       CASE WHEN complexExpansionN.mIIdentifier IS NULL THEN "Not Needed" ELSE complexExpansionN.mIIdentifier END as expansion_method_mi_identifier,
       COLLECT (sourceN.shortName) as source_databases
       ORDER BY interactorA_uniprot_name



------------------------------------------------------------------------------------------------------------------------------------------------------------

Complex uniprot mapping

Match (complexInteractorN:GraphInteractor)-[complexInteractorR:interactor]-(complexParticipantN:GraphModelledParticipant)-[complexParticipantR:IC_PARTICIPANT]-(complex:GraphComplex) WHERE EXISTS(complexInteractorN.uniprotName)
WITH  COLLECT(distinct complexInteractorN) as complexInteractors
UNWIND complexInteractors as complexInteractor
MATCH  (complexInteractor)-[complexInteractorR:interactor]-(complexParticipantN:GraphModelledParticipant)-[complexParticipantR:IC_PARTICIPANT]-(complex:GraphComplex),(complex)-[complexAcXrefR:complexAcXref]-(complexAcXrefN:GraphXref)
RETURN complexInteractor.uniprotName as interactor_uniprot_name, COLLECT (distinct complexAcXrefN.identifier) as complex_acs
ORDER BY complexInteractor.uniprotName






